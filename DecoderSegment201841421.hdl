


 CHIP DecoderSegment201841421 {
    IN A, B, C, D;
    OUT segmentD;

    PARTS:
    
    
    Not(in=A, out=nota);
    Not(in=B, out=notb);
    Not(in=C, out=notc);
    Not(in=D, out=notd);

    
    
    
    And(a=notc, b=notd, out=notcandnotd);
    And(a=A, b=notcandnotd, out=notcandnotdanda);
    
  
    And(a=nota, b=notb, out=notaandnotb);
    And(a=notc, b=notd, out=notcandnotd2);  // Combine NOT C and NOT D
    And(a=notaandnotb, b=notcandnotd2, out=notall);

    And(a=nota, b=notb, out=notaandnotb2);
    And(a=C, b=notaandnotb2, out=notaandnotbandc);
    

    And(a=nota, b=C, out=notaandc);
    And(a=notd, b=notaandc, out=notaandcandnotd);

    

    And(a=B, b=notc, out=bandnotc);
    And(a=bandnotc, b=D, out=bandnotcandd);

    
    And(a=A, b=notb, out=aandnotb);
    And(a=C, b=D, out=candd);
    And(a=aandnotb, b=candd, out=aandnotbandcandd);

    
    Or(a=notcandnotdanda, b=notall, out=firstor);
    Or(a=notaandnotbandc, b=notaandcandnotd, out=secondor);
    Or(a=bandnotcandd, b=aandnotbandcandd, out=thirdor);
    Or(a=firstor, b=secondor, out=fourthor);
    Or(a=fourthor, b=thirdor, out=segmentD);
}